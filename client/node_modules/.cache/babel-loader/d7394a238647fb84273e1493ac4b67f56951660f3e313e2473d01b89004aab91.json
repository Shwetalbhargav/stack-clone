{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stack-overflow-main\\\\client\\\\src\\\\Pages\\\\Auth\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const location = useLocation();\n  const token = new URLSearchParams(location.search).get('token');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(`/api/auth/reset-password?token=${token}`, {\n        password\n      });\n      setMessage('Password reset successfully!');\n    } catch (error) {\n      setMessage('Error Setting password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter new password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"2VrTSD21oydw1rcC+qZOsamApT4=\", false, function () {\n  return [useLocation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useLocation","ResetPassword","password","setPassword","message","setMessage","location","token","URLSearchParams","search","get","handleSubmit","e","preventDefault","post","error","target","value"],"sources":["D:/Stack-overflow-main/client/src/Pages/Auth/ResetPassword.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ResetPassword =() =>{\r\n    const[password, setPassword] = useState('');\r\n    const[message, setMessage] = useState('');\r\n    const location = useLocation();\r\n    const token = new URLSearchParams(location.search).get('token');\r\n    \r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        try{\r\n            await axios.post(`/api/auth/reset-password?token=${token}`, {password});\r\n            setMessage('Password reset successfully!')\r\n        }\r\n        catch (error){\r\n            setMessage('Error Setting password')\r\n        }\r\n    };\r\n    return(\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <h2>Reset Password</h2>\r\n                <input \r\n                    type=\"text\"\r\n                    value={password}\r\n                    onChange={(e)=> setPassword(e.target.value)}\r\n                    placeholder=\"Enter new password\"\r\n                    required\r\n                 />\r\n             <button type=\"submit\">Submit</button>\r\n             </form>\r\n             {message&&<p>{message}</p>}\r\n        </div>\r\n    \r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,aAAa,GAAE,MAAK;EAAA;EACtB,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAK,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAMQ,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,KAAK,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,CAAC,OAAO,CAAC;EAE/D,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAI;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAG;MACC,MAAMd,KAAK,CAACe,IAAI,CAAE,kCAAiCP,KAAM,EAAC,EAAE;QAACL;MAAQ,CAAC,CAAC;MACvEG,UAAU,CAAC,8BAA8B,CAAC;IAC9C,CAAC,CACD,OAAOU,KAAK,EAAC;MACTV,UAAU,CAAC,wBAAwB,CAAC;IACxC;EACJ,CAAC;EACD,oBACI;IAAA,wBACI;MAAM,QAAQ,EAAEM,YAAa;MAAA,wBACzB;QAAA,UAAI;MAAc;QAAA;QAAA;QAAA;MAAA,QAAK,eACvB;QACI,IAAI,EAAC,MAAM;QACX,KAAK,EAAET,QAAS;QAChB,QAAQ,EAAGU,CAAC,IAAIT,WAAW,CAACS,CAAC,CAACI,MAAM,CAACC,KAAK,CAAE;QAC5C,WAAW,EAAC,oBAAoB;QAChC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACT,eACN;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B,EACNb,OAAO,iBAAE;MAAA,UAAIA;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACzB;AAGd,CAAC;AAAC,GAjCIH,aAAa;EAAA,QAGED,WAAW;AAAA;AAAA,KAH1BC,aAAa;AAmCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}